`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 2019/11/12 20:25:57
// Design Name: 
// Module Name: BCH_LFSR_1
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////
//1	1	1	0	0	1	1	0	0	0	0	1	0	1	0	1	1	1	0	0	1	1	0	0	0	1	0	0	1	1	0	1	0	0	0	0	1
//这里信息位为1475位，采用最高次幂位36的生成多项式，间隔p等于5
module BCH_LFSF(clk,vout,msg,rst);
parameter n = 510;
parameter k = 474;
input clk;
input rst;
input [k:0]msg;
output reg[n:0]vout;
integer ii,i1,j1,i2,j2,i3,j3,i4,j4,ib1,ib2,ib3,ib4,ip,ir;
wire [n-k-1:0]b = 36'b110011000010101110011000100110100001;
reg [n-k-1:0]bchreg;
reg [n-k-1:0]bchreg11;
reg [1295:0]A0;
reg [1295:0]A4=1296'b
reg [179:0]B=180'b111011001110100110100110111011100001100011100011100011111110111110001000001111011001110100110100110101011110000110000110100111010001010101011011110110110111000011000011001011011011;

initial
begin
bchreg = 0;
bchreg11=0;
ip=475;
A0=0;
 for(ii=36;ii>=2;ii=ii-1)
     begin
       A0[ii*36-1]=b[ii-1];
       A0[37*ii-38]=1;
     end
     A0[35]=1;
 //这里是生成A矩阵的1到5次方
 end

always@(posedge clk)
begin
if(rst)
  begin
    bchreg<=0;
    ip<=475;
  end
 //做最后的计算
 else if(ip>0&&(!rst))
     begin
      for(ir=35;ir>=0;ir=ir-1)
         begin
           bchreg[ir]<=((A4[(ir+1)*36-1]&bchreg[35])^(A4[(ir+1)*36-2]&bchreg[34])^(A4[(ir+1)*36-3]&bchreg[33])^(A4[(ir+1)*36-4]&bchreg[32])^(A4[(ir+1)*36-5]&bchreg[31])^(A4[(ir+1)*36-6]&bchreg[30])^(A4[(ir+1)*36-7]&bchreg[29])^(A4[(ir+1)*36-8]&bchreg[28])^(A4[(ir+1)*36-9]&bchreg[27])^(A4[(ir+1)*36-10]&bchreg[26])^(A4[(ir+1)*36-11]&bchreg[25])^(A4[(ir+1)*36-12]&bchreg[24])^(A4[(ir+1)*36-13]&bchreg[23])^(A4[(ir+1)*36-14]&bchreg[22])^(A4[(ir+1)*36-15]&bchreg[21])^(A4[(ir+1)*36-16]&bchreg[20])^(A4[(ir+1)*36-17]&bchreg[19])^(A4[(ir+1)*36-18]&bchreg[18])^(A4[(ir+1)*36-19]&bchreg[17])^(A4[(ir+1)*36-20]&bchreg[16])^(A4[(ir+1)*36-21]&bchreg[15])^(A4[(ir+1)*36-22]&bchreg[14])^(A4[(ir+1)*36-23]&bchreg[13])^(A4[(ir+1)*36-24]&bchreg[12])^(A4[(ir+1)*36-25]&bchreg[11])^(A4[(ir+1)*36-26]&bchreg[10])^(A4[(ir+1)*36-27]&bchreg[9])^(A4[(ir+1)*36-28]&bchreg[8])^(A4[(ir+1)*36-29]&bchreg[7])^(A4[(ir+1)*36-30]&bchreg[6])^(A4[(ir+1)*36-31]&bchreg[5])^(A4[(ir+1)*36-32]&bchreg[4])^(A4[(ir+1)*36-33]&bchreg[3])^(A4[(ir+1)*36-34]&bchreg[2])^(A4[(ir+1)*36-35]&bchreg[1])^(A4[(ir+1)*36-36]&bchreg[0]))^(B[(ir+1)*5-1]&msg[ip-1])^(B[(ir+1)*5-2]&msg[ip-2])^(B[(ir+1)*5-3]&msg[ip-3])^(B[(ir+1)*5-4]&msg[ip-4])^(B[(ir+1)*5-5]&msg[ip-5]);
         end
         ip=ip-5;
      end
    else if(ip==0)
     begin
       vout=(msg<<36)+bchreg;
     end
end
endmodule
